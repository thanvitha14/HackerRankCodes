import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

import java.util.*;

public class MatchingStrings {
    
    public static List<Integer> matchingStrings(List<String> strings, List<String> queries) {
        List<Integer> result = new ArrayList<>();
        
        // Iterate over each query string
        for (String query : queries) {
            // Count occurrences of the query in the strings list
            int count = Collections.frequency(strings, query);
            result.add(count);
        }
        
        return result;
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Read the number of strings
        int n = scanner.nextInt();
        scanner.nextLine();  // Consume the newline
        
        // Read the list of strings
        List<String> strings = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            strings.add(scanner.nextLine());
        }
        
        // Read the number of queries
        int q = scanner.nextInt();
        scanner.nextLine();  // Consume the newline
        
        // Read the list of queries
        List<String> queries = new ArrayList<>();
        for (int i = 0; i < q; i++) {
            queries.add(scanner.nextLine());
        }
        
        // Call the matchingStrings function and get the result
        List<Integer> result = matchingStrings(strings, queries);
        
        // Output the result
        for (int count : result) {
            System.out.println(count);
        }
        
        scanner.close();
    }
}
